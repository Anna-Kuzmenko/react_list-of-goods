{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","state","isReversed","sortType","NONE","alphabeticallySort","setState","ALPHABET","lengthSort","LENGTH","reset","reverse","this","goods","visibleGoods","sort","good1","good2","localeCompare","length","console","log","getReorderedGoods","className","type","ClassNames","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAkBKA,E,wGAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KA2CE,IAAME,EAAb,4MACEC,MAAe,CACbC,YAAY,EACZC,SAAUL,EAASM,MAHvB,EAMEC,mBAAqB,WACnB,EAAKC,SAAS,CACZH,SAAUL,EAASS,YARzB,EAYEC,WAAa,WACX,EAAKF,SAAS,CACZH,SAAUL,EAASW,UAdzB,EAkBEC,MAAQ,WACN,EAAKJ,SAAS,CACZH,SAAUL,EAASM,KACnBF,YAAY,KArBlB,EAyBES,QAAU,WACR,EAAKL,UAAS,SAAAL,GAAK,MAAK,CACtBC,YAAaD,EAAMC,gBA3BzB,4CA+BE,WACE,MAAiCU,KAAKX,MAA9BC,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,SACdU,EAjEH,SACLA,EADK,GAGJ,IADCV,EACF,EADEA,SAAUD,EACZ,EADYA,WAENY,EAAY,YAAOD,GAoBzB,OAlBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKL,EAASS,SACZ,OAAOS,EAAME,cAAcD,GAC7B,KAAKnB,EAASW,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAC9B,QACE,OAAO,MAITjB,GACFY,EAAaH,UAIfS,QAAQC,IAAIlB,EAAUD,GAEfY,EAyCSQ,CAAkBvB,EAAiB,CAAEI,WAAUD,eAE7D,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWE,IAAW,SAAU,UAC9B,CAAE,WAAYtB,IAAaL,EAASS,WACtCmB,QAASd,KAAKP,mBAJhB,iCASA,wBACEmB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAC9B,CAAE,WAAYtB,IAAaL,EAASW,SACtCiB,QAASd,KAAKJ,WAJhB,4BASA,wBACEgB,KAAK,SACLD,UAAWE,IAAW,SAAU,aAC9B,CAAE,YAAavB,IACjBwB,QAASd,KAAKD,QAJhB,sBASER,IAAaL,EAASM,MAAQF,IAE5B,wBACEsB,KAAK,SACLD,UAAU,4BACVG,QAASd,KAAKF,MAHhB,sBAWN,6BACE,6BACGG,EAAMc,KAAI,SAAAC,GACT,OACE,oBAAI,UAAQ,OAAZ,SACGA,GADqBA,iBAlFxC,GAAyBC,IAAMC,WC1D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.06910fac.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport ClassNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ninterface ReorderOptions {\n  sortType: SortType,\n  isReversed: boolean,\n}\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      default:\n        return 0;\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ninterface State {\n  isReversed: boolean,\n  sortType: SortType,\n}\n\nexport class App extends React.Component<{}, State> {\n  state: State = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  alphabeticallySort = () => {\n    this.setState({\n      sortType: SortType.ALPHABET,\n    });\n  };\n\n  lengthSort = () => {\n    this.setState({\n      sortType: SortType.LENGTH,\n    });\n  };\n\n  reset = () => {\n    this.setState({\n      sortType: SortType.NONE,\n      isReversed: false,\n    });\n  };\n\n  reverse = () => {\n    this.setState(state => ({\n      isReversed: !state.isReversed,\n    }));\n  };\n\n  render() {\n    const { isReversed, sortType } = this.state;\n    const goods = getReorderedGoods(goodsFromServer, { sortType, isReversed });\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={ClassNames('button', 'is-info',\n              { 'is-light': sortType !== SortType.ALPHABET })}\n            onClick={this.alphabeticallySort}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={ClassNames('button', 'is-success',\n              { 'is-light': sortType !== SortType.LENGTH })}\n            onClick={this.lengthSort}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={ClassNames('button', 'is-warning',\n              { 'is-light': !isReversed })}\n            onClick={this.reverse}\n          >\n            Reverse\n          </button>\n\n          {(sortType !== SortType.NONE || isReversed)\n            && (\n              <button\n                type=\"button\"\n                className=\"button is-danger is-light\"\n                onClick={this.reset}\n              >\n                Reset\n              </button>\n            )}\n\n        </div>\n\n        <ul>\n          <ul>\n            {goods.map(good => {\n              return (\n                <li data-cy=\"Good\" key={good}>\n                  {good}\n                </li>\n              );\n            })}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}